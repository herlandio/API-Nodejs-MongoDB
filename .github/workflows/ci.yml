name: ci/cd

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

env:
  REGISTRY: docker.io
  IMAGE: herlandio7/apinodemongo
  
  DOCKERHUB_USER: ${{ secrets.DOCKER_USER }}
  DOCKERHUB_TOKEN: ${{ secrets.DOCKER_TOKEN }}
  
  HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
  HEROKU_EMAIL: ${{ secrets.HEROKU_EMAIL }}
  
  MONGO_ATLAS_USER: ${{secrets.MONGO_ATLAS_USER}}
  MONGO_ATLAS_PWD: ${{secrets.MONGO_ATLAS_PWD}}
  MONGO_ATLAS_DB: ${{secrets.MONGO_ATLAS_DB}}

  APP_TOKEN: ${{secrets.APP_TOKEN}}
  APP_REFRESH_TOKEN: ${{secrets.APP_REFRESH_TOKEN}}

jobs:

  build:
    runs-on: ubuntu-latest
    
    steps:

    - uses: actions/checkout@v2

    - name: Docker meta
      id: docker_meta
      uses: crazy-max/ghaction-docker-meta@v1
      with:
        images: ${{env.IMAGE}}
        tag-sha: true

    - name: QEMU
      uses: docker/setup-qemu-action@v1

    - name: Docker Buildx
      uses: docker/setup-buildx-action@v1

    - name: Login to Dockerhub
      uses: docker/login-action@v1
      with:
        username: ${{ env.DOCKERHUB_USERNAME}}
        password: ${{ env.DOCKERHUB_TOKEN}}

    - name: Bump version and push tag
      id: tagging
      uses: mathieudutour/github-tag-action@v4.5
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}

    - name: Build and push
      id: docker_build
      uses: docker/build-push-action@v2
      with:
        push: true
        context: .
        file: ./Dockerfile
        platforms: linux/amd64,linux/arm64,linux/386
        tags: ${{env.IMAGE}}:${{ steps.tagging.outputs.new_version }}
        
  deploy:
    needs: [build]
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Deploy to Heroku
      uses: akhileshns/heroku-deploy@v3.12.12
      with:
        heroku_api_key: ${{ env.HEROKU_API_KEY }}
        heroku_app_name: api-nodemongo
        heroku_email: ${{ env.HEROKU_EMAIL }}
        usedocker: true
        docker_build_args: |
          ARG_USER
          ARG_PASS
          ARG_DB
          ARG_TOKEN
          ARG_REFRESH_TOKEN
      env:
        ARG_USER: ${{ env.MONGO_ATLAS_USER }}
        ARG_PASS: ${{ env.MONGO_ATLAS_PWD }}
        ARG_DB: ${{ env.MONGO_ATLAS_DB }}
        ARG_TOKEN: ${{ env.APP_TOKEN }}
        ARG_REFRESH_TOKEN: ${{ env.APP_REFRESH_TOKEN }}
